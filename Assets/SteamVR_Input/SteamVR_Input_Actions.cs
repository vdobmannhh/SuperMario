//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Vector2 p_platformer_Move;
        
        private static SteamVR_Action_Boolean p_platformer_Jump;
        
        private static SteamVR_Action_Pose p_platformer_Pose;
        
        private static SteamVR_Action_Boolean p_platformer_Select;
        
        private static SteamVR_Action_Boolean p_platformer_Tube;
        
        private static SteamVR_Action_Boolean p_platformer_Shoot;
        
        private static SteamVR_Action_Boolean p_platformer_Menu;
        
        private static SteamVR_Action_Boolean p_platformer_Accept;
        
        public static SteamVR_Action_Vector2 platformer_Move
        {
            get
            {
                return SteamVR_Actions.p_platformer_Move.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean platformer_Jump
        {
            get
            {
                return SteamVR_Actions.p_platformer_Jump.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose platformer_Pose
        {
            get
            {
                return SteamVR_Actions.p_platformer_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Boolean platformer_Select
        {
            get
            {
                return SteamVR_Actions.p_platformer_Select.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean platformer_Tube
        {
            get
            {
                return SteamVR_Actions.p_platformer_Tube.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean platformer_Shoot
        {
            get
            {
                return SteamVR_Actions.p_platformer_Shoot.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean platformer_Menu
        {
            get
            {
                return SteamVR_Actions.p_platformer_Menu.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean platformer_Accept
        {
            get
            {
                return SteamVR_Actions.p_platformer_Accept.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.platformer_Move,
                    SteamVR_Actions.platformer_Jump,
                    SteamVR_Actions.platformer_Pose,
                    SteamVR_Actions.platformer_Select,
                    SteamVR_Actions.platformer_Tube,
                    SteamVR_Actions.platformer_Shoot,
                    SteamVR_Actions.platformer_Menu,
                    SteamVR_Actions.platformer_Accept};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.platformer_Move,
                    SteamVR_Actions.platformer_Jump,
                    SteamVR_Actions.platformer_Pose,
                    SteamVR_Actions.platformer_Select,
                    SteamVR_Actions.platformer_Tube,
                    SteamVR_Actions.platformer_Shoot,
                    SteamVR_Actions.platformer_Menu,
                    SteamVR_Actions.platformer_Accept};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[0];
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[0];
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.platformer_Pose};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.platformer_Jump,
                    SteamVR_Actions.platformer_Select,
                    SteamVR_Actions.platformer_Tube,
                    SteamVR_Actions.platformer_Shoot,
                    SteamVR_Actions.platformer_Menu,
                    SteamVR_Actions.platformer_Accept};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[0];
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[] {
                    SteamVR_Actions.platformer_Move};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[0];
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.platformer_Move,
                    SteamVR_Actions.platformer_Jump,
                    SteamVR_Actions.platformer_Select,
                    SteamVR_Actions.platformer_Tube,
                    SteamVR_Actions.platformer_Shoot,
                    SteamVR_Actions.platformer_Menu,
                    SteamVR_Actions.platformer_Accept};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_platformer_Move = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/platformer/in/Move")));
            SteamVR_Actions.p_platformer_Jump = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/platformer/in/Jump")));
            SteamVR_Actions.p_platformer_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/platformer/in/Pose")));
            SteamVR_Actions.p_platformer_Select = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/platformer/in/Select")));
            SteamVR_Actions.p_platformer_Tube = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/platformer/in/Tube")));
            SteamVR_Actions.p_platformer_Shoot = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/platformer/in/Shoot")));
            SteamVR_Actions.p_platformer_Menu = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/platformer/in/Menu")));
            SteamVR_Actions.p_platformer_Accept = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/platformer/in/Accept")));
        }
    }
}
